version: '3.3'
services:

  cassandra:
    image: cassandra:latest
    restart: always
    healthcheck:
      test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces" ]
      interval: 15s
      timeout: 10s
      retries: 10
    networks:
      - cassandra
      - coin
      - user_backend
      - scheduling

  cassandra-load-keyspace:
    image: cassandra:latest
    depends_on:
      cassandra:
        condition: service_healthy
    volumes:
      - ./database/cassandra/src/cassandra_schema.cql:/schema.cql
    command: /bin/bash -c "echo loading cassandra keyspace && cqlsh cassandra -f /schema.cql"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
      - cassandra

  react_ui:
    build: ./website/frontend/user-interface
    restart: always
    depends_on:
      user_backend:
        condition: service_started
    networks:
      - website
    deploy:
        replicas: 1

  user_backend:
    build: ./website/backend
    restart: always
    depends_on:
      cassandra:
        condition: service_healthy
      cassandra-load-keyspace:
        condition: service_completed_successfully
      auth_service:
        condition: service_started
      coin_service:
        condition: service_started
    command:
      - "--authentication_uri=http://auth_service:7979"
      - "--cassandra_uri=cassandra"
      - "--cassandra_port=9042"
      - "--cassandra_user=cassandra"
      - "--cassandra_passwd=cassandra"
      - "--coinservice_uri=http://coin_service:1337"
    networks:
      - website
      - coin
      - user_backend
    deploy:
        replicas: 1

  auth_service:
    build: ./authentitication/server
    restart: always
    depends_on:
      cassandra:
        condition: service_healthy
      cassandra-load-keyspace:
        condition: service_completed_successfully
    command:
      - "--cassandra_uri=cassandra"
      - "--cassandra_port=9042"
      - "--cassandra_user=cassandra"
      - "--cassandra_passwd=cassandra"
    networks:
      - user_backend
    deploy:
        replicas: 1

  mining_server:
    build: ./mining/server
    networks:
      - mining_backend
      - mining
      - scheduling
      - rabbitmq_network
    command:
      - "--redis_uri=scheduling_store"
      - "--redis_port=6379"
      - "--rabbitMQ_uri=rabbitmq"
      - "--rabbitMQ_user=user"
      - "--rabbitMQ_passwd=user"
    depends_on:
      rabbitmq:
        condition: service_healthy

  result_server:
    build: ./result/server
    networks:
      - mining_backend
      - mining
      - scheduling
      - rabbitmq_network
    command:
      - "--redis_uri=scheduling_store"
      - "--redis_port=6379"
      - "--task_db_number=0"
      - "--socketio_db_number=1"
      - "--rabbitMQ_uri=rabbitmq"
      - "--rabbitMQ_user=user"
      - "--rabbitMQ_passwd=user"
    depends_on:
      rabbitmq:
        condition: service_healthy

  scheduling_service:
    build: ./scheduling/server
    restart: always
    command:
      - "--cassandra_uri=cassandra"
      - "--cassandra_port=9042"
      - "--cassandra_user=cassandra"
      - "--cassandra_passwd=cassandra"
      - "--redis_uri=scheduling_store"
      - "--redis_port=6379"
      - "--manager_uri=http://manager"
      - "--manager_port=666"
    networks:
      - scheduling
    depends_on:
      cassandra:
        condition: service_healthy
      cassandra-load-keyspace:
        condition: service_completed_successfully
      scheduling_store:
        condition: service_started
    deploy:
      replicas: 1

  scheduling_store:
    image: redis:7.0-alpine
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - scheduling

  manager:
    build: ./scheduling/manager
    networks:
      - scheduling

  coin_service:
    build: ./coin
    command:
      - "--cassandra_uri=cassandra"
      - "--cassandra_port=9042"
      - "--cassandra_user=cassandra"
      - "--cassandra_passwd=cassandra"
    depends_on:
      cassandra:
        condition: service_healthy
      cassandra-load-keyspace:
        condition: service_completed_successfully
    networks:
      - coin

  nginx:
    image: nginx:latest
    ports:
      - "99:99"
    volumes:
      - ./loadbalancer/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - react_ui
      - mining_server
      - result_server
    networks:
      - website
      - mining

  rabbitmq:
    image: "rabbitmq"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: user
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - rabbitmq_network

networks:
  website:
  scheduling:
  mining:
  coin:
  user_backend:
  mining_backend:
  cassandra:
  rabbitmq_network: